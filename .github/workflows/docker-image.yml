name: LearnGo

on:
  push:
    branches: [main]

jobs:
  docker:
    runs-on: self-hosted  # Ensure this runner is properly configured
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Cache Docker Image Layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        id: docker_build
        with:
          context: ./src
          file: ./src/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/learngo:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify Image Digest
        run: echo "Docker Image Digest: ${{ steps.docker_build.outputs.digest }}"

  deploy:
    needs: docker
    runs-on: self-hosted
    steps:
      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/learngo:latest

      - name: Delete Old Container (if exists)
        run: |
          if [ $(docker ps -aq -f name=learngo) ]; then
            docker rm -f learngo
          fi

      - name: Run Docker Container
        run: |
          docker run -d -p 8080:8080 \
            --name learngo \
            -e MONGO_URL=${{ secrets.MONGO_URL }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e YOUR_CLIENT_ID=${{ secrets.YOUR_CLIENT_ID }} \
            -e PORT=${{ secrets.PORT }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/learngo:latest
